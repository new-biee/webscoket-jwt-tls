# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.miraway.selfservice: DEBUG

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  cloud:
    consul:
      config:
        fail-fast: false # if not in "prod" profile, do not force to use Spring Cloud Config
        format: yaml
        profile-separator: '-'
      discovery:
        prefer-ip-address: true
        tags:
          - profile=${spring.profiles.active}
          - version=#project.version#
          - git-version=${git.commit.id.describe:}
          - git-commit=${git.commit.id.abbrev:}
          - git-branch=${git.branch:}
        enabled: true
      host: 127.0.0.1
      port: 8500
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false
  sleuth:
    # https://github.com/spring-projects/spring-framework/issues/27844#issuescomment-1002866885
    # https://github.com/spring-cloud/spring-cloud-sleuth/issues/2094
    async:
      enabled: false
    enabled: false
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true
  kafka:
    bootstrap-servers: localhost:9094
    streams:
      replication-factor: 1
      application-id: websocket-kafka
    consumer:
      auto-offset-reset: earliest
server:
  port: 8088

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  cache: # Cache configuration
    redis: # Redis configuration
      expiration: 3600 # By default objects stay 1 hour (in seconds) in the cache
      server: redis://localhost:6379
      cluster: false
      connectionPoolSize: 64
      connectionMinimumIdleSize: 24
      subscriptionConnectionPoolSize: 50
      subscriptionConnectionMinimumIdleSize: 1
      # server: redis://localhost:6379,redis://localhost:16379,redis://localhost:26379
      # cluster: true
  # CORS is disabled by default on microservices, as you should access them through a gateway.
  # If you want to enable it, please uncomment the configuration below.
  # cors:
  #   allowed-origins: "http://localhost:9000,https://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count"
  #   allow-credentials: true
  #   max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: NDc1YjNhMjVkYWVmMTM1OTc5MjY0MjYxYzliMjBhMzQ2MTZkZTNhYjA3ZThhZjk5MGE1ZGJkZjVhM2JiZjNhOTZjNmIzNmNmM2I1Mzk3MTI3YTgyOTg3YjZjZmIxM2M2MzQ3YTAyYzk1MWZjY2FhOGJhM2FmYjdlYTE3OTFjMGQ=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================
redis: # Redis configuration
  host: 127.0.0.1 # Server address
  port: 6379
kafka:
  deviceTopic: deviceTopic
  settingTopic: settingTopic
  uaaTopic: uaaTopic
  groupId: device
  groupId2: uaa
